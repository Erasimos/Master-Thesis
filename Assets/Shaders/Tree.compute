// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "Random.cginc"

uint NUM_TREES = 100;
uint MAX_BRANCHES = 1000000;

int num_branches = 0;
int num_trees = 0;

uint branch_main[MAX_BRANCHES];
uint branch_lateral[MAX_BRANCHES];
uint branch_parent = [MAX_BRANCHES];
float3 branch_bottom[MAX_BRANCHES];
float3 branch_top[MAX_BRANCHES];
float branch_gath_energy[MAX_BRANCHES];
float branch_dist_energy[MAX_BRANCHES];

int free_idxs[MAX_BRANCHES]; // init on cpu

// init trees on cpu

void EvaluateLightExposure(int branch_index)
{
    return;
}

bool isTerminal(int branch_index)
{
    return (branch_main[branch_index] == -1 && branch_lateral[branch_index] == -1);
}

void GatherEnergy(int root_index)
{
    int current_index = root_index;
    int main_index = branch_main[root_index];
    int lateral_index = -branch_lateral[root_index];
    
    while (current_index != -1)
    {
        while (lateral_index != -1)
        {
            while (main_index != -1)
            {
                if (isTerminal(current_index))
                    EvaluateLightExposure(current_index);
                else
                {
                    current_index = main_index;
                    main_index = branch_main[current_index];
                    lateral_index = branch_lateral[current_index];
                }
            }
            current_index = lateral_index;
            main_index = branch_main[current_index];
            lateral_index = branch_lateral[current_index];
        }
        current_index = branch_parent[]
    }
}

[numthreads(NUM_TREES, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{

}